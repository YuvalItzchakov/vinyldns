################################################################################################################
# The configuration used when running migrations
# To use this config, specify -Dconfig.resource=db-migrations.conf
################################################################################################################
akka {
  loglevel = "INFO"
  log-dead-letters-during-shutdown = off
  log-dead-letters = 0

  actor {
    provider = "akka.actor.LocalActorRefProvider"
  }

  persistence {
    journal.plugin = "inmemory-journal"
    snapshot-store.plugin = "inmemory-snapshot-store"
  }
}

vinyldns {
  rest {
    host = "localhost"
    port = 9002
  }

  db {
    local-mode = false
    default {
      driver = "org.mariadb.jdbc.Driver"

      # requires these as environment variables, will fail if not present
      migrationUrl = ${JDBC_MIGRATION_URL}
      user = ${JDBC_USER}
      password = ${JDBC_PASSWORD}

      poolInitialSize = 10
      poolMaxSize = 20
      connectionTimeoutMillis=5000
      maxLifeTime = 600000
    }
  }

  dynamo {
    tablePrefix = ${DYNAMO_TABLE_PREFIX}
    key = ${DYNAMO_KEY}
    secret = ${DYNAMO_SECRET}
    endpoint = "https://dynamodb.us-east-1.amazonaws.com"
    endpoint = ${?DYNAMO_ENDPOINT}
  }

  zoneChanges {
    dummy = false

    dynamo {
      tableName = ${vinyldns.dynamo.tablePrefix}"zoneChange"
      provisionedReads=100
      provisionedWrites=100
    }
  }
  recordSet {
    dummy = false

    dynamo {
      tableName = ${vinyldns.dynamo.tablePrefix}"recordSet"
      provisionedReads=100
      provisionedWrites=100
    }
  }

  recordChange {
    dummy = false

    dynamo {
      tableName = ${vinyldns.dynamo.tablePrefix}"recordChange"
      provisionedReads=100
      provisionedWrites=100
    }
  }

  users {
    dummy = false

    dynamo {
      tableName = ${vinyldns.dynamo.tablePrefix}"users"
      provisionedReads=100
      provisionedWrites=100
    }
  }

  groups {
    dummy = false

    dynamo {
      tableName = ${vinyldns.dynamo.tablePrefix}"groups"
      provisionedReads=100
      provisionedWrites=100
    }
  }

  membership {
    dummy = false

    dynamo {
      tableName = ${vinyldns.dynamo.tablePrefix}"membership"
      provisionedReads=100
      provisionedWrites=100
    }
  }

  groupChanges {
    dummy = false

    dynamo {
      tableName = ${vinyldns.dynamo.tablePrefix}"groupChanges"
      provisionedReads=100
      provisionedWrites=100
    }
  }
}
